"Valida los tipos de nivel"

enum Level{
    principiante
    intermedio
    avanzado
}

union GlobalSearch = Course | Student | Monitor

type Course {
    _id: ID!
    title: String!
    teacher: String
    description: String!
    topic: String @deprecated,
    people: [Student]
    level: Level
}

interface Person {
    _id: ID!
    name: String!
    email: String!
}

type Student implements Person {
    _id: ID!
    name: String!
    email: String!
    avatar: String
}

type Monitor implements Person {
    _id: ID!
    name: String!
    email: String!
    phone: String
}

type Query {
    "Retorna un array de cursos"
    getCourses: [Course]
    "Obtener un unico curso por medio del ID que es un campo requerido"
    getCourse(id: ID!): Course
    "Retorna un array de estudiantes"
    getPeople: [Person]
    "Obtener un unico estudiante"
    getPerson(id: ID!): Person
    "ejecuta una busqueda global"
    searchItems(keyword: String!): [GlobalSearch]
}

input CourseEditInput {
    title: String!
    teacher: String
    description: String!
    topic: String
}
input CourseInput {
    title: String!
    teacher: String
    description: String
    topic: String
    level: Level
}

input PersonInput {
    name: String!
    email: String!
    phone: String
    avatar: String
}
input PersontEditInput {
    name: String
    email: String
    phone: String
    avatar: String
}

type Mutation {
    "Crear curso, mutation se usa para insertar"
    createCourse(input: CourseInput!) : Course
    "Edita un curso"
    editCourse(_id: ID!, input: CourseEditInput) : Course
    "Crear persona"
    createPerson(input: PersonInput!) : Person
    "Editar persona"
    editPerson(_id: ID!, input: PersontEditInput!) : Person
    "Agregar persona un curso"
    addPeople(courseID: ID!, personID: ID!): Course
}